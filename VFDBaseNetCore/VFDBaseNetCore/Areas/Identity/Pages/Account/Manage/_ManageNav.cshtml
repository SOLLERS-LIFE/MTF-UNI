@using Microsoft.AspNetCore.Identity
@using MTF.Areas.Identity.Data;
@using Microsoft.AspNetCore.Authorization;
@using MTF.Areas.Identity.Authorization;
@inject SignInManager<CommonUser> SignInManager
@inject UserManager<CommonUser> UserManager
@inject IAuthorizationService AuthorizationService
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var NavHeight = MTF.GlobalParameters.NavbarHeight;
    var baseColor = MTF.GlobalParameters._baseColor;
    var isSU = await AuthorizationService.AuthorizeAsync(
                                                   User,
                                                   UserManager.GetUserId(User),
                                                   AuthOperations.NoRestrictions
                                                  );
    var teamAlias = MTF.GlobalParameters.TeamNameAlias;
    var teamsAlias = MTF.GlobalParameters.TeamsNameAlias;
}

<div class="">
    <ul class="nav nav-pills flex-column">
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index"
               asp-route-id="@ViewData["userId"]">
                Profile
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email"
               asp-route-id="@ViewData["userId"]">
                Email
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword"
               asp-route-id="@ViewData["userId"]">
                Password
            </a>
        </li>
        @if (hasExternalLogins)
        {
            <li class="nav-item">
                <a class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" id="external-login" asp-page="./ExternalLogins"
                   asp-route-id="@ViewData["userId"]">
                    External logins
                </a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication"
               asp-route-id="@ViewData["userId"]">
                Two-factor authentication
            </a>
        </li>
        @if (isSU.Succeeded)
        {
            <li class="nav-item">
                <a class="nav-link @ManageNavPages.RolesNavClass(ViewContext)" id="roles" asp-page="./Roles"
                   asp-route-id="@ViewData["userId"]">
                    Roles
                </a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.TeamsUserNavClass(ViewContext)" id="teamsUser" asp-page="./TeamsUser"
               asp-route-id="@ViewData["userId"]">
                @teamsAlias
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData"
               asp-route-id="@ViewData["userId"]">
                Personal data
            </a>
        </li>
    </ul>
</div>

@{
    var activePage = ViewData["ActivePage"] as string;
    var userId = ViewData["userId"] as string;
    ViewData["data-pageIdent"] = "AccountManagement" + userId;
    ViewData["data-avlMsg"] = "The User '" + ViewData["userName"] + "' you have requested for edit is available now";
}
<script>
    function userDocumentIsOccuped(pageIdent) {
        window.alert("The User you are requested for editing is occuped now. You receive a notification when it be available.");
        document.getElementById("courtine").classList.toggle("opened");
    }
</script>
<partial name="~/Pages/Shared/_pageActualization.cshtml"/>
