// <auto-generated />
using System;
using MTF.Areas.Logging.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MTF.Migrations.LogDB_
{
    [DbContext(typeof(LogDB_Context))]
    [Migration("20211028133416_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("MTF.Areas.Logging.Models.ClaimsLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("author")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("claimText")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<DateTime>("logged")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("viewed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("viewedby")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("author");

                    b.HasIndex("claimText");

                    b.HasIndex("logged", "viewed");

                    b.ToTable("ClaimsLog");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.ClaimsLogCatched", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("actorId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("author")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("claimText")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<DateTime>("logged")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("marked")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("prevID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("viewed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("viewedby")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("actorId");

                    b.HasIndex("logged", "viewed");

                    b.ToTable("ClaimsLogCatched");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.ClaimsLogcacheControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("uid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("wfid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("claimsLogcacheControl");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.GeneralLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("_exception")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)")
                        .HasDefaultValue("");

                    b.Property<string>("_level")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("");

                    b.Property<string>("appIdent")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValue("");

                    b.Property<string>("callsite")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValue("");

                    b.Property<DateTime>("logged")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("logger")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValue("");

                    b.Property<string>("machineName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValue("");

                    b.Property<string>("message")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasDefaultValue("");

                    b.Property<string>("properties")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasDefaultValue("");

                    b.Property<string>("reqhost")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasDefaultValue("");

                    b.Property<string>("uId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValue("");

                    b.Property<string>("url")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasDefaultValue("");

                    b.HasKey("ID");

                    b.HasIndex("appIdent");

                    b.HasIndex("logged");

                    b.HasIndex("machineName");

                    b.HasIndex("message");

                    b.HasIndex("uId");

                    b.ToTable("GeneralLog");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.GeneralLogCatched", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("_exception")
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)");

                    b.Property<string>("_level")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("actorId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("appIdent")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("callsite")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("logged")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("logger")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("machineName")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("prevID")
                        .HasColumnType("int");

                    b.Property<string>("properties")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("reqhost")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("uId")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("url")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("ID");

                    b.HasIndex("actorId");

                    b.HasIndex("appIdent");

                    b.HasIndex("logged");

                    b.HasIndex("machineName");

                    b.HasIndex("message");

                    b.ToTable("GeneralLogCatched");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.GeneralLogPermanent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("_level")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("appIdent")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("logged")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("ID");

                    b.HasIndex("logged");

                    b.HasIndex("message");

                    b.ToTable("GeneralLogPermanent");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.cacheControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("uid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("wfid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("cacheControls");
                });

            modelBuilder.Entity("MTF.Areas.Logging.Models.combinedFilters", b =>
                {
                    b.Property<string>("uid")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("subsys")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("filter")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("uid", "subsys");

                    b.ToTable("combinedFilters");
                });

            modelBuilder.Entity("MTF.Hubs.ChatHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("appIdent")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("dateIn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("machineName")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("msg")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("uId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ID");

                    b.HasIndex("appIdent");

                    b.HasIndex("dateIn");

                    b.HasIndex("machineName");

                    b.HasIndex("msg");

                    b.HasIndex("uId");

                    b.ToTable("ChatHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
