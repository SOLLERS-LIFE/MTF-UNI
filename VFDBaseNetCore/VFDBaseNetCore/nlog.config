<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
	  internalLogIncludeTimestamp="true"
	  internalLogToConsoleError="true"
	  internalLogToTrace="false"
      throwConfigExceptions="true">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets async="true">
		<default-wrapper xsi:type="AutoFlushWrapper" condition="level >= LogLevel.Warn" FlushOnConditionOnly="false">
			<wrapper-target xsi:type="BufferingWrapper" bufferSize="131072" 
							flushTimeout="15000" slidingTimeout="true" 
							overflowAction="Flush"/>
		</default-wrapper>
		<!-- write logs to database  -->
		<!-- using packages: https://www.nuget.org/packages/MySqlConnector/"-->
		<!-- it is not necessary to keep the password secure - loguser has permissions to execust sps only  -->
		<target xsi:type="database" name="WTFlogs"
		        dbProvider="MySqlConnector.MySqlConnection, MySqlConnector"
				connectionString="server=192.168.250.225;port=31500;SslMode=Preferred;database=WTFlogs;user=logger;password=7777777;"
				isolationLevel="Serializable"
				keepConnection="true"
				commandType="StoredProcedure"
				commandText="WTFlogs.NLog_AddEntry_p">
			<parameter name="machineName"    layout="${machinename}" />
			<parameter name="appIdent"       layout="${gdc:item=AppIdent}" />
			<parameter name="logged"         layout="${date}" />
			<parameter name="lvl"            layout="${level}" />
			<parameter name="message"        layout="${message}" />
			<parameter name="logger"         layout="${logger}" />
			<parameter name="properties"     layout="${all-event-properties:separator=|}" />
			<parameter name="callsite"       layout="${callsite}" />
			<parameter name="expn"           layout="${exception:format=tostring}" />
			<parameter name="url"            layout="${aspnet-request-url}" />
			<parameter name="reqhost"        layout="${aspnet-request-host}" />
			<parameter name="uId"            layout="${aspnet-user-identity}" />
		</target>
		<!-- it is not necessary to keep the password secure - loguser has permissions to execust sps only  -->
		<target xsi:type="database" name="WTFlogsPerm"
		        dbProvider="MySqlConnector.MySqlConnection, MySqlConnector"
			    connectionString="server=192.168.250.225;port=31500;SslMode=Preferred;database=WTFlogs;user=logger;password=7777777;;"
				isolationLevel="Serializable"
				keepConnection="true"
				commandType="StoredProcedure"
				commandText="WTFlogs.NLog_AddEntry_Perm">
			<parameter name="appIdent"       layout="${gdc:item=AppIdent}" />
			<parameter name="logged"         layout="${date}" />
			<parameter name="lvl"            layout="${level}" />
			<parameter name="message"        layout="${message}" />
		</target>
		<!-- write logs to file  -->
		<!-- target xsi:type="File" name="allfile" keepFileOpen="true" fileName="c:\temp\nlog-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" /-->
		<!-- copy to console -->
		<target xsi:type="Console" name="logconsole"
				layout="${longdate} ${event-properties:item=EventId_Id} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}"
			    WriteBuffer="true" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*WebOptimizer*" minlevel="Warning" writeTo="WTFlogs" final="true" />
		<logger name="*" minlevel="Trace" writeTo="WTFlogs" />
		<logger name="*UsersActivity.UAStore" minlevel="Trace" writeTo="WTFlogsPerm" />
		<logger name="*SCOCertsSimpleFunctions.GetPrebuiltPDFBody" minlevel="Trace" writeTo="WTFlogsPerm" />
		<!--All logs, including from Microsoft-->
		<!--logger name="*" minlevel="Trace" writeTo="allfile" /-->
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Warning" writeTo="logconsole" />
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<!--logger name="Microsoft.*" maxlevel="Info" final="true" /-->
		<!-- BlackHole without writeTo -->
		<!--logger name="*" minlevel="Trace"/-->
	</rules>
</nlog>